version: '3.3'

volumes:
  db-data:
  caddy_certs:

services:
  typebot-db:
    image: postgres:14-alpine
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=typebot
      - POSTGRES_PASSWORD=typebot
    networks:
        - typebot-network
  typebot-builder:
    image: twerlo/typebot-builder:dev
    container_name: typebot-builder
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: always
    depends_on:
      - typebot-db
    ports:
      - '8080:3000'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file: .env
    networks:
      - typebot-network
      - caddy-proxy

  typebot-viewer:
    image: twerlo/typebot-viewer:dev
    container_name: typebot-viewer
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: always
    ports:
      - '8081:3000'
    env_file: .env
    networks:
      - typebot-network
      - caddy-proxy

  caddy:
    image: caddy/caddy
    container_name: caddy
    depends_on:
      - typebot-builder
      - typebot-viewer
    restart: always
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN_NAME_BUILDER=${NEXTAUTH_URL}
      - DOMAIN_NAME_VIEWER=${NEXT_PUBLIC_VIEWER_URL}
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_certs:/root/.caddy
    networks:
        - caddy-proxy

  watchtower:
    image: containrrr/watchtower
    command:
      - "--cleanup"
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    env_file:
      - .env
    environment:
      - REPO_USER=${DOCKERHUB_USER}
      - REPO_PASS=${DOCKERHUB_PASS}
      - WATCHTOWER_POLL_INTERVAL=60
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    container_name: "watchtower"

networks:
    caddy-proxy:
        external: true
    typebot-network:
        driver: bridge
